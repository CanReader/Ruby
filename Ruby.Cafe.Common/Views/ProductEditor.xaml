<Page x:Class="Ruby.Cafe.Common.Screens.ProductEditor"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d" 
      d:DesignHeight="768" d:DesignWidth="1517"
      Title="HistoryManager" Background="#CECECE" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Loaded="Page_Loaded" Unloaded="Page_Unloaded">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Ruby.Cafe.Common;component/Css/OutlineTextbox.xaml"/>
                <ResourceDictionary Source="/Ruby.Cafe.Common;component/Css/OutlineButton.xaml"/>
                <ResourceDictionary Source="/Ruby.Cafe.Common;component/Css/OutlineComboBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <!-- Template and style of Categories -->
            <Style x:Key="CategoryTemplate" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="26"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Border x:Name="Bd" Width="555" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <Border.Background>
                                        <LinearGradientBrush>
                                            <GradientStop Color="#FF00FFAE" Offset="0.92"/>
                                            <GradientStop Color="DarkOrange"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <MultiTrigger>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
                
            <!-- Template and style of Products-->
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Border BorderThickness="3" x:Name="Bd" Height="30" Width="500" Grid.Column="1" SnapsToDevicePixels="true">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush>
                                            <GradientStop Color="#FF2E2B1E" Offset="0.3"/>
                                            <GradientStop Color="#FF1E1B27" Offset="0.6"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#FF35266A" Offset="0.6"/>
                                            <GradientStop Color="#FF75868D" Offset="0.4"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Page.Resources>
    <Grid x:Name="Wrapper">
        <Grid x:Name="Content" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
            </Grid.Resources>

            <TreeView x:Name="Producter" Margin="30,20,30,60" Background="#aaaaaa" VerticalAlignment="Stretch" BorderThickness="0"  Grid.Column="0" SelectedItemChanged="PickAProduct">
            </TreeView>

            <StackPanel Grid.Column="1" Margin="0,50,0,30"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Orientation="Vertical">
                <Grid Margin="0,20,0,0">
                    <TextBox x:Name="ProductNameBox" Text="Product Name" HorizontalAlignment="Center" Margin="0,0,300,0"  TextChanged="Changed"/>
                    <TextBox x:Name="CategoryName" Margin="300,0,0,0"  Text="Category Name" TextChanged="Changed"/>
                </Grid>
                <Grid Margin="0,40,0,0">
                    <TextBox x:Name="TaxBox"  Margin="0,0,300,0" Text="Tax" TextChanged="Changed" KeyDown="AvoidChar"/>
                    <TextBox x:Name="Barcode"   Margin="330,0,0,0" Text="Barcode" TextChanged="Changed"/>
                </Grid>
                <Grid Margin="0,40,0,0">
                    <TextBox x:Name="ServingBox" FontSize="28" Style="{x:Null}" VerticalContentAlignment="Center" Padding="3" HorizontalAlignment="Left" TextAlignment="Center" Margin="30,0,0,0" Text="Serving" Foreground="Black" Opacity="10"  Width="220" TextChanged="Changed"/>
                    <TextBox x:Name="QuantityBox" FontSize="24" Style="{x:Null}" Padding="3"  HorizontalAlignment="Center" TextAlignment="Center" Margin="0,0,40,0" Text="Quantity" VerticalContentAlignment="Center" Foreground="Black" Opacity="10"  Width="260" TextChanged="Changed" KeyDown="AvoidChar"/>
                    <TextBox x:Name="PriceBox" FontSize="24" Style="{x:Null}" Padding="3"  HorizontalAlignment="Right" TextAlignment="Center" Margin="0,0,30,0" Text="Price" VerticalContentAlignment="Center" Foreground="Black" Opacity="10"  Width="260" KeyDown="AvoidChar" TextChanged="Changed"/>
                </Grid>
                <Grid Margin="40,10,40,0" HorizontalAlignment="Stretch" Height="280">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="143*"/>
                        <RowDefinition Height="32*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width ="4*"/>
                        <ColumnDefinition Width ="1*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="ServingLister" Background="#FFA6A6A6" HorizontalAlignment="Center" VerticalScrollBarVisibility="Visible" IsReadOnly="False" CanUserAddRows="False" CanUserSortColumns="True" VerticalAlignment="Stretch"  MaxHeight="250" Grid.RowSpan="2">
                        <!--Row Header Style-->
                        <DataGrid.RowHeaderStyle>
                            <Style TargetType="DataGridRowHeader">
                                <Setter Property="Width" Value="0"/>
                            </Style>
                        </DataGrid.RowHeaderStyle>
                        <!--Row Header Style-->
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" Value="Teal"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="SeparatorBrush" Value="Blue"/>
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="SeparatorVisibility" Value="Visible"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="Margin" Value="0,2,0,0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGridTextColumn CanUserResize="True" CanUserSort="True" IsReadOnly="False"/>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Serving}" Header="Serving" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Quantity}" Header="Quantity" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Price}" Header="Price" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Rectangle VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,63" Width="80" Height="80"  Grid.Column="1" MouseDown="AddServing" >
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="pack://application:,,,/Ruby.Resources;Component/IMG/IMG_UI_PlusBtn.png" Stretch="Uniform"/>
                        </Rectangle.Fill>

                    </Rectangle>
                    <Rectangle VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,120,0,25" Width="70" Height="30"  Grid.Column="1" MouseDown="RemoveServing" Grid.RowSpan="2">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="pack://application:,,,/Ruby.Resources;Component/IMG/IMG_UI_MinusBtn.png" Stretch="Uniform"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
                <StackPanel Margin="0,50,0,0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="SaveProductBtn" Content="Save Product" Width="170" HorizontalAlignment="Right"  Margin="0,5,100,0" Click="SaveProduct"/>
                    <Button x:Name="RemoveProductBtn" Margin="0,0,0,0" Content="Remove Product" Width="170" Click="RemoveSelectedProduct"/>
                </StackPanel>
            </StackPanel>

            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal" Margin="30,0,30,10" Grid.Column="1">
                <Button x:Name="EditProductBtn" Content="Edit Product" FontSize="30" Margin="0,0,40,0" Click="EditSelectedProduct" Visibility="Collapsed"/>
                <Button x:Name="CopyProductBtn" Content="Create Copy"  FontSize="30" Margin="0,0,40,0" Click="CopySelectedProduct" Visibility="Collapsed"/>
            </StackPanel>

            <TextBlock x:Name="PMessage" Text="{Binding}" Foreground="Green" FontSize="46" HorizontalAlignment="Center" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="0,0,0,-62" Visibility="Collapsed"/>

        </Grid>
    </Grid>
</Page>